{"version":3,"sources":["assets/images/logo-mini.svg","app/shared/Spinner.js","app/AppRoutes.js","app/shared/Navbar.js","app/shared/Sidebar.js","app/shared/Footer.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Spinner","className","Component","Dashboard","lazy","Buttons","Dropdowns","Typography","BasicElements","BasicTable","FontAwesome","ChartJs","Error404","Error500","Login","Register1","BlankPage","AppRoutes","fallback","exact","path","component","to","Navbar","document","querySelector","classList","toggle","href","onClick","evt","preventDefault","src","require","alt","type","body","Dropdown","alignRight","Toggle","Menu","Item","this","toggleOffcanvas","Sidebar","state","menuState","setState","Object","keys","length","forEach","i","prevProps","props","location","onRouteChanged","remove","obj","isPathActive","id","userPagesMenuOpen","toggleMenuState","data-toggle","Collapse","in","pathname","startsWith","querySelectorAll","el","addEventListener","contains","add","withRouter","Footer","App","navbarComponent","isFullPageLayout","sidebarComponent","footerComponent","console","log","window","scrollTo","fullPageLayoutRoutes","Boolean","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ffc2f76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-mini.8539ea86.svg\";","import React, { Component } from 'react'\r\n\r\nexport class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"spinner-wrapper\">\r\n          <div className=\"donut\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Spinner\r\n","import React, { Component,Suspense, lazy } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Spinner from '../app/shared/Spinner';\r\n\r\nconst Dashboard = lazy(() => import('./dashboard/Dashboard'));\r\n\r\nconst Buttons = lazy(() => import('./basic-ui/Buttons'));\r\nconst Dropdowns = lazy(() => import('./basic-ui/Dropdowns'));\r\nconst Typography = lazy(() => import('./basic-ui/Typography'));\r\n\r\nconst BasicElements = lazy(() => import('./form-elements/BasicElements'));\r\n\r\nconst BasicTable = lazy(() => import('./tables/BasicTable'));\r\n\r\nconst FontAwesome = lazy(() => import('./icons/FontAwesome'));\r\n\r\n\r\nconst ChartJs = lazy(() => import('./charts/ChartJs'));\r\n\r\nconst Error404 = lazy(() => import('./user-pages/Error404'));\r\nconst Error500 = lazy(() => import('./user-pages/Error500'));\r\n\r\nconst Login = lazy(() => import('./user-pages/Login'));\r\nconst Register1 = lazy(() => import('./user-pages/Register'));\r\n\r\nconst BlankPage = lazy(() => import('./user-pages/BlankPage'));\r\n\r\n\r\nclass AppRoutes extends Component {\r\n  render () {\r\n    return (\r\n      <Suspense fallback={<Spinner/>}>\r\n        <Switch>\r\n          <Route exact path=\"/dashboard\" component={ Dashboard } />\r\n\r\n          <Route path=\"/basic-ui/buttons\" component={ Buttons } />\r\n          <Route path=\"/basic-ui/dropdowns\" component={ Dropdowns } />\r\n          <Route path=\"/basic-ui/typography\" component={ Typography } />\r\n\r\n          <Route path=\"/form-Elements/basic-elements\" component={ BasicElements } />\r\n\r\n          <Route path=\"/tables/basic-table\" component={ BasicTable } />\r\n\r\n          <Route path=\"/icons/font-awesome\" component={ FontAwesome } />\r\n\r\n          <Route path=\"/charts/chart-js\" component={ ChartJs } />\r\n\r\n\r\n          <Route path=\"/user-pages/login-1\" component={ Login } />\r\n          <Route path=\"/user-pages/register-1\" component={ Register1 } />\r\n\r\n          <Route path=\"/user-pages/error-404\" component={ Error404 } />\r\n          <Route path=\"/user-pages/error-500\" component={ Error500 } />\r\n\r\n          <Route path=\"/user-pages/blank-page\" component={ BlankPage } />\r\n\r\n\r\n          <Redirect to=\"/dashboard\" />\r\n        </Switch>\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRoutes;","import React, { Component } from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nclass Navbar extends Component {\r\n  toggleOffcanvas() {\r\n    document.querySelector('.sidebar-offcanvas').classList.toggle('active');\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar col-lg-12 col-12 p-lg-0 fixed-top d-flex flex-row\">\r\n        <div className=\"navbar-menu-wrapper d-flex align-items-center justify-content-between\">\r\n          <a className=\"navbar-brand brand-logo-mini align-self-center d-lg-none\" href=\"!#\" onClick={evt => evt.preventDefault()}><img src={require(\"../../assets/images/logo-mini.svg\")} alt=\"logo\" /></a>\r\n          <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" onClick={() => document.body.classList.toggle('sidebar-icon-only')}>\r\n            <i className=\"mdi mdi-menu\"></i>\r\n          </button>\r\n          <ul className=\"navbar-nav navbar-nav-left header-links\">\r\n            {/* <li className=\"nav-item d-none d-md-flex\">\r\n              <a href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"nav-link\">Schedule <span className=\"badge badge-primary ml-1\">New</span>\r\n              </a>\r\n            </li> */}\r\n            <li className=\"nav-item active d-none d-xl-flex\">\r\n              <a href=\"!#\" onClick={evt => evt.preventDefault()} className=\"nav-link\">\r\n                <i className=\"mdi mdi-elevation-rise\"></i>Reports</a>\r\n            </li>\r\n            <li className=\"nav-item d-none d-xl-flex\">\r\n              <a href=\"!#\" onClick={evt => evt.preventDefault()} className=\"nav-link\">\r\n                <i className=\"mdi mdi-flask\"></i>Experiments</a>\r\n            </li>\r\n            {/* <li className=\"nav-item d-none d-lg-flex\">\r\n              <a href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"nav-link\">\r\n                <i className=\"mdi mdi-bookmark-plus-outline\"></i>Score</a>\r\n            </li> */}\r\n          </ul>\r\n          <ul className=\"navbar-nav navbar-nav-right ml-lg-auto\">\r\n            {/* <li className=\"nav-item  nav-profile border-0\">\r\n              <Dropdown alignRight>\r\n                <Dropdown.Toggle className=\"nav-link count-indicator p-0 toggle-arrow-hide bg-transparent\">\r\n                  <i className=\"mdi mdi-file-outline\"></i>\r\n                  <span className=\"count\">7</span>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu className=\"navbar-dropdown preview-list\">\r\n                  <Dropdown.Item className=\"dropdown-item  d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\r\n                    <p className=\"mb-0 font-weight-medium float-left\">You have 7 unread mails </p>\r\n                    <span className=\"badge badge-pill badge-primary float-right\">View all</span>\r\n                  </Dropdown.Item>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\r\n                    <div className=\"preview-thumbnail\">\r\n                      <img src={require(\"../../assets/images/faces/face10.jpg\")} alt=\"profile\" className=\"img-sm profile-pic\" /> </div>\r\n                    <div className=\"preview-item-content flex-grow py-2\">\r\n                      <p className=\"preview-subject ellipsis font-weight-medium text-dark\">Marian Garner </p>\r\n                      <p className=\"font-weight-light small-text\"> The meeting is cancelled </p>\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\r\n                    <div className=\"preview-thumbnail\">\r\n                      <img src={require(\"../../assets/images/faces/face12.jpg\")} alt=\"profile\" className=\"img-sm profile-pic\" /> </div>\r\n                    <div className=\"preview-item-content flex-grow py-2\">\r\n                      <p className=\"preview-subject ellipsis font-weight-medium text-dark\">David Grey </p>\r\n                      <p className=\"font-weight-light small-text\"> The meeting is cancelled </p>\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\r\n                    <div className=\"preview-thumbnail\">\r\n                      <img src={require(\"../../assets/images/faces/face1.jpg\")} alt=\"profile\" className=\"img-sm profile-pic\" /> </div>\r\n                    <div className=\"preview-item-content flex-grow py-2\">\r\n                      <p className=\"preview-subject ellipsis font-weight-medium text-dark\">Travis Jenkins </p>\r\n                      <p className=\"font-weight-light small-text\"> The meeting is cancelled </p>\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n            <li className=\"nav-item  nav-profile border-0 pl-4\">\r\n              <Dropdown alignRight>\r\n                <Dropdown.Toggle className=\"nav-link count-indicator p-0 toggle-arrow-hide bg-transparent\">\r\n                  <i className=\"mdi mdi-bell-outline\"></i>\r\n                  <span className=\"count bg-success\">4</span>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu className=\"navbar-dropdown preview-list\">\r\n                  <Dropdown.Item className=\"dropdown-item py-3 d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\r\n                    <p className=\"mb-0 font-weight-medium float-left\">You have 4 new notifications </p>\r\n                    <span className=\"badge badge-pill badge-primary float-right\">View all</span>\r\n                  </Dropdown.Item>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\r\n                    <div className=\"preview-thumbnail\">\r\n                      <i className=\"mdi mdi-alert m-auto text-primary\"></i>\r\n                    </div>\r\n                    <div className=\"preview-item-content py-2\">\r\n                      <h6 className=\"preview-subject font-weight-normal text-dark mb-1\">Application Error</h6>\r\n                      <p className=\"font-weight-light small-text mb-0\"> Just now </p>\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\r\n                    <div className=\"preview-thumbnail\">\r\n                      <i className=\"mdi mdi-settings m-auto text-primary\"></i>\r\n                    </div>\r\n                    <div className=\"preview-item-content py-2\">\r\n                      <h6 className=\"preview-subject font-weight-normal text-dark mb-1\">Settings</h6>\r\n                      <p className=\"font-weight-light small-text mb-0\"> Private message </p>\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\r\n                    <div className=\"preview-thumbnail\">\r\n                      <i className=\"mdi mdi-airballoon m-auto text-primary\"></i>\r\n                    </div>\r\n                    <div className=\"preview-item-content py-2\">\r\n                      <h6 className=\"preview-subject font-weight-normal text-dark mb-1\">New user registration</h6>\r\n                      <p className=\"font-weight-light small-text mb-0\"> 2 days ago </p>\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li> */}\r\n            <li className=\"nav-item  nav-profile border-0\">\r\n              <Dropdown alignRight>\r\n                <Dropdown.Toggle className=\"nav-link count-indicator bg-transparent\">\r\n                  <span className=\"profile-text\">Nour Sofanati</span>\r\n                  <img className=\"img-xs rounded-circle\" src=\"https://scontent-mrs2-2.xx.fbcdn.net/v/t1.0-9/p960x960/54521278_2387411651490326_8739762851083714560_o.jpg?_nc_cat=102&_nc_sid=85a577&_nc_ohc=rEZA3ST_qY0AX-Kbvs7&_nc_ht=scontent-mrs2-2.xx&_nc_tp=6&oh=5c84b78f09b0d81f89d484bc1135fb5a&oe=5F05C815\" alt=\"Profile\" />\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu className=\"preview-list navbar-dropdown pb-3\">\r\n                  {/* <Dropdown.Item className=\"dropdown-item p-0 preview-item d-flex align-items-center border-bottom\" href=\"!#\" onClick={evt => evt.preventDefault()}>\r\n                    <div className=\"d-flex\">\r\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center\">\r\n                        <i className=\"mdi mdi-bookmark-plus-outline mr-0\"></i>\r\n                      </div>\r\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center border-left border-right\">\r\n                        <i className=\"mdi mdi-account-outline mr-0\"></i>\r\n                      </div>\r\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center\">\r\n                        <i className=\"mdi mdi-alarm-check mr-0\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </Dropdown.Item> */}\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center border-0 mt-2\" onClick={evt => evt.preventDefault()}>\r\n                    Manage Accounts\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center border-0\" onClick={evt => evt.preventDefault()}>\r\n                    Change Password\r\n                  </Dropdown.Item>\r\n                  {/* <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center border-0\" onClick={evt => evt.preventDefault()}>\r\n                    Check Inbox\r\n                  </Dropdown.Item> */}\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center border-0\" onClick={evt => evt.preventDefault()}>\r\n                    Sign Out\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          </ul>\r\n          <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" onClick={this.toggleOffcanvas}>\r\n            <span className=\"mdi mdi-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Collapse } from 'react-bootstrap';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nclass Sidebar extends Component {\r\n  state = {};\r\n\r\n  toggleMenuState(menuState) {\r\n    if (this.state[menuState]) {\r\n      this.setState({ [menuState]: false });\r\n    } else if (Object.keys(this.state).length === 0) {\r\n      this.setState({ [menuState]: true });\r\n    } else {\r\n      Object.keys(this.state).forEach(i => {\r\n        this.setState({ [i]: false });\r\n      });\r\n      this.setState({ [menuState]: true });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      this.onRouteChanged();\r\n    }\r\n  }\r\n\r\n  onRouteChanged() {\r\n    document.querySelector('#sidebar').classList.remove('active');\r\n    Object.keys(this.state).forEach(i => {\r\n      this.setState({ [i]: false });\r\n    });\r\n\r\n    const dropdownPaths = [\r\n      { path: '/basic-ui', state: 'basicUiMenuOpen' },\r\n      { path: '/form-elements', state: 'formElementsMenuOpen' },\r\n      { path: '/tables', state: 'tablesMenuOpen' },\r\n      { path: '/icons', state: 'iconsMenuOpen' },\r\n      { path: '/charts', state: 'chartsMenuOpen' },\r\n      { path: '/user-pages', state: 'userPagesMenuOpen' },\r\n    ];\r\n\r\n    dropdownPaths.forEach((obj => {\r\n      if (this.isPathActive(obj.path)) {\r\n        this.setState({ [obj.state]: true })\r\n      }\r\n    }));\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n        <ul className=\"nav pt-3\">\r\n          <li className=\"nav-item nav-profile not-navigation-link\">\r\n            <div className=\"nav-link\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle className=\"nav-link user-switch-dropdown-toggler p-0 toggle-arrow-hide bg-transparent border-0 w-100\">\r\n                  <div className=\"d-flex justify-content-between align-items-start\">\r\n                    <div className=\"profile-image\">\r\n                      <img src=\"https://scontent-mrs2-2.xx.fbcdn.net/v/t1.0-9/p960x960/54521278_2387411651490326_8739762851083714560_o.jpg?_nc_cat=102&_nc_sid=85a577&_nc_ohc=rEZA3ST_qY0AX-Kbvs7&_nc_ht=scontent-mrs2-2.xx&_nc_tp=6&oh=5c84b78f09b0d81f89d484bc1135fb5a&oe=5F05C815\" alt=\"profile\" />\r\n                    </div>\r\n                    <div className=\"text-left ml-3\">\r\n                      <p className=\"profile-name\">Nour Sofanati</p>\r\n                      <small className=\"designation text-muted text-small\">Administrator</small>\r\n                      <span className=\"status-indicator online\"></span>\r\n                    </div>\r\n                  </div>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu className=\"preview-list navbar-dropdown\">\r\n\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center text-small\" onClick={evt => evt.preventDefault()}>\r\n                    Manage Accounts\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center text-small\" onClick={evt => evt.preventDefault()}>\r\n                    Change Password\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center text-small\" onClick={evt => evt.preventDefault()}>\r\n                    Sign Out\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <button className=\"btn btn-success btn-block\">Add Data<i className=\"mdi mdi-plus\"></i></button>\r\n            </div>\r\n          </li>\r\n          <li className={this.isPathActive('/dashboard') ? 'nav-item active' : 'nav-item'}>\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"mdi mdi-television menu-icon\"></i>\r\n              <span className=\"menu-title\">Dashboard</span>\r\n            </Link>\r\n          </li>\r\n          {/* <li className={this.isPathActive('/basic-ui') ? 'nav-item active' : 'nav-item'}>\r\n            <div className={this.state.basicUiMenuOpen ? 'nav-link menu-expanded' : 'nav-link'} onClick={() => this.toggleMenuState('basicUiMenuOpen')} data-toggle=\"collapse\">\r\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\r\n              <span className=\"menu-title\">Basic UI Elements</span>\r\n              <i className=\"menu-arrow\"></i>\r\n            </div>\r\n            <Collapse in={this.state.basicUiMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\"> <Link className={this.isPathActive('/basic-ui/buttons') ? 'nav-link active' : 'nav-link'} to=\"/basic-ui/buttons\">Buttons</Link></li>\r\n                <li className=\"nav-item\"> <Link className={this.isPathActive('/basic-ui/dropdowns') ? 'nav-link active' : 'nav-link'} to=\"/basic-ui/dropdowns\">Dropdowns</Link></li>\r\n                <li className=\"nav-item\"> <Link className={this.isPathActive('/basic-ui/typography') ? 'nav-link active' : 'nav-link'} to=\"/basic-ui/typography\">Typography</Link></li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li className={this.isPathActive('/form-elements') ? 'nav-item active' : 'nav-item'}>\r\n            <Link className=\"nav-link\" to=\"/form-elements/basic-elements\">\r\n              <i className=\"mdi mdi-format-list-bulleted menu-icon\"></i>\r\n              <span className=\"menu-title\">Form Elements</span>\r\n            </Link>\r\n          </li>\r\n          <li className={this.isPathActive('/tables') ? 'nav-item active' : 'nav-item'}>\r\n            <Link className=\"nav-link\" to=\"/tables/basic-table\">\r\n              <i className=\"mdi mdi-table-large menu-icon\"></i>\r\n              <span className=\"menu-title\">Tables</span>\r\n            </Link>\r\n          </li>\r\n          <li className={this.isPathActive('/icons') ? 'nav-item active' : 'nav-item'}>\r\n            <Link className=\"nav-link\" to=\"/icons/font-awesome\">\r\n              <i className=\"mdi mdi-account-box-outline menu-icon\"></i>\r\n              <span className=\"menu-title\">Icons</span>\r\n            </Link>\r\n          </li> */}\r\n          <li className={this.isPathActive('/charts') ? 'nav-item active' : 'nav-item'}>\r\n            <Link className=\"nav-link\" to=\"/charts/chart-js\">\r\n              <i className=\"mdi mdi-chart-line menu-icon\"></i>\r\n              <span className=\"menu-title\">Charts</span>\r\n            </Link>\r\n          </li>\r\n          <li className={this.isPathActive('/user-pages') ? 'nav-item active' : 'nav-item'}>\r\n            <div className={this.state.userPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link'} onClick={() => this.toggleMenuState('userPagesMenuOpen')} data-toggle=\"collapse\">\r\n              <i className=\"mdi mdi-lock-outline menu-icon\"></i>\r\n              <span className=\"menu-title\">User Pages</span>\r\n              <i className=\"menu-arrow\"></i>\r\n            </div>\r\n            <Collapse in={this.state.userPagesMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                {/* <li className=\"nav-item\"> <Link className={this.isPathActive('/user-pages/blank-page') ? 'nav-link active' : 'nav-link'} to=\"/user-pages/blank-page\">Blank Page</Link></li> */}\r\n                <li className=\"nav-item\"> <Link className={this.isPathActive('/user-pages/login-1') ? 'nav-link active' : 'nav-link'} to=\"/user-pages/login-1\">Login</Link></li>\r\n                <li className=\"nav-item\"> <Link className={this.isPathActive('/user-pages/register-1') ? 'nav-link active' : 'nav-link'} to=\"/user-pages/register-1\">Register</Link></li>\r\n                {/* <li className=\"nav-item\"> <Link className={this.isPathActive('/user-pages/error-404') ? 'nav-link active' : 'nav-link'} to=\"/user-pages/error-404\">404</Link></li>\r\n                <li className=\"nav-item\"> <Link className={this.isPathActive('/user-pages/error-500') ? 'nav-link active' : 'nav-link'} to=\"/user-pages/error-500\">500</Link></li> */}\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"http://www.bootstrapdash.com/demo/star-admin-free/react/documentation/documentation.html\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n              <i className=\"mdi mdi-file-outline menu-icon\"></i>\r\n              <span className=\"menu-title\">Documentation</span>\r\n            </a>\r\n          </li> */}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  isPathActive(path) {\r\n    return this.props.location.pathname.startsWith(path);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onRouteChanged();\r\n    // add className 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\r\n    const body = document.querySelector('body');\r\n    document.querySelectorAll('.sidebar .nav-item').forEach((el) => {\r\n\r\n      el.addEventListener('mouseover', function () {\r\n        if (body.classList.contains('sidebar-icon-only')) {\r\n          el.classList.add('hover-open');\r\n        }\r\n      });\r\n      el.addEventListener('mouseout', function () {\r\n        if (body.classList.contains('sidebar-icon-only')) {\r\n          el.classList.remove('hover-open');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Sidebar);","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  render () {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"d-sm-flex justify-content-center justify-content-sm-between\">\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './App.scss';\r\nimport AppRoutes from './AppRoutes';\r\nimport Navbar from './shared/Navbar';\r\nimport Sidebar from './shared/Sidebar';\r\nimport Footer from './shared/Footer';\r\n\r\nclass App extends Component {\r\n  state = {}\r\n  componentDidMount() {\r\n    this.onRouteChanged();\r\n  }\r\n  render() {\r\n    let navbarComponent = !this.state.isFullPageLayout ? <Navbar /> : '';\r\n    let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar /> : '';\r\n    let footerComponent = !this.state.isFullPageLayout ? <Footer /> : '';\r\n    return (\r\n      <div className=\"container-scroller\">\r\n        {navbarComponent}\r\n        <div className=\"container-fluid page-body-wrapper\">\r\n          {sidebarComponent}\r\n          <div className=\"main-panel\">\r\n            <div className=\"content-wrapper\">\r\n              <AppRoutes />\r\n            </div>\r\n            {footerComponent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      this.onRouteChanged();\r\n    }\r\n  }\r\n\r\n  onRouteChanged() {\r\n    console.log(\"ROUTE CHANGED\");\r\n    window.scrollTo(0, 0);\r\n    const fullPageLayoutRoutes = ['/user-pages/login-1', '/user-pages/login-2', '/user-pages/register-1', '/user-pages/register-2', '/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page'];\r\n    for (let i = 0; i < fullPageLayoutRoutes.length; i++) {\r\n      if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\r\n        this.setState({\r\n          isFullPageLayout: true\r\n        })\r\n        document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\r\n        break;\r\n      } else {\r\n        this.setState({\r\n          isFullPageLayout: false\r\n        })\r\n        document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/demo\">\r\n    <App />\r\n  </BrowserRouter>\r\n, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}